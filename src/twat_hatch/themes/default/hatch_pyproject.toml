[build-system]
requires = ["hatchling>=1.21.0", "hatch-vcs>=0.3.0", "hatch-semver>=0.1.0"]
build-backend = "hatchling.build"

[project]
name = "{name}"
dynamic = ["version"]
description = "{description}"
readme = "README.md"
requires-python = ">={min_python}"
license = "{license}"
keywords = []
authors = [
    { name = "{author_name}", email = "{author_email}" }
]
classifiers = [
    "Development Status :: {development_status}",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/{github_username}/{name}#readme"
Issues = "https://github.com/{github_username}/{name}/issues"
Source = "https://github.com/{github_username}/{name}"

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "semver-pep440" }

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/twat_hatch --cov=tests {args:tests}"
type-check = "mypy src/twat_hatch tests"
lint = ["ruff check src/twat_hatch tests", "ruff format src/twat_hatch tests"]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/twat_hatch tests}"
style = ["ruff check {args:.}", "ruff format {args:.}"]
fmt = ["ruff format {args:.}", "ruff check --fix {args:.}"]
all = ["style", "typing"]

[tool.black]
target-version = ["py38"]
line-length = 88
skip-string-normalization = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "PLR0913",  # Too many arguments to function call
    "ISC001",   # Implicit string concatenation
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.run]
source_pkgs = ["twat_hatch", "tests"]
branch = true
parallel = true
omit = [
    "src/twat_hatch/__about__.py",
]

[tool.coverage.paths]
twat_hatch = ["src/twat_hatch", "*/twat-hatch/src/twat_hatch"]
tests = ["tests", "*/twat-hatch/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
] 