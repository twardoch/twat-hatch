# Project configuration for package theme
[project]
# List of packages to initialize
packages = [
    "my-package"
]

# Output directory (optional, defaults to current directory)
output_dir = "packages"

# Author information
[author]
name = "{{ author_name }}"
email = "{{ author_email }}"
github_username = "{{ github_username }}"

# Package configuration
[package]
min_python = "{{ min_python }}"
{% if max_python %}max_python = "{{ max_python }}"{% endif %}
license = "{{ license }}"
development_status = "{{ development_status }}"

# Dependencies
[dependencies]
# Regular package dependencies
dependencies = [
    "importlib-metadata>=6.0.0",
    "importlib-resources>=5.0.0",
    "typing-extensions>=4.0.0; python_version < '3.10'"
]

# Development configuration
[development]
# Additional development dependencies
additional_dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]

# Tool configurations
[tools.ruff]
line_length = 88
target_version = "{{ python_version_info.ruff_target }}"
select = ["E", "F", "B", "I", "UP"]
ignore = []

[tools.mypy]
python_version = "{{ python_version_info.mypy_version }}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# Feature flags
[features]
mkdocs = false  # Enable MkDocs documentation
semver = true   # Use semantic versioning
vcs = true      # Enable VCS integration 